# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    app_locales: en|fr
    upload_destination: '%kernel.project_dir%/public/uploads/files'
    admin_email: "%env(ADMIN_EMAIL)%"
    client_small_logo_width: '50'
    client_small_logo_height: '30'
    client_medium_logo_width: '120'
    client_medium_logo_height: '80'
    client_large_logo_width: '240'
    client_large_logo_height: '160'
    user_cv_width: '600'
    user_cv_height: '800'
    app_host: "%env(APP_HOST)%"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $msTeamsConnector: "%env(MS_TEAMS_CONNECTOR)%"

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Library\MPdfConverter:
        arguments: ['%kernel.cache_dir%']

    App\EntityListener\TemplateManagement\ClasseEntityListener:
        tags:
            - { name: 'doctrine.orm.entity_listener', event: 'prePersist', entity: 'App\Entity\TemplateManagement\Classe'}
            - { name: 'doctrine.orm.entity_listener', event: 'preUpdate', entity: 'App\Entity\TemplateManagement\Classe'}
