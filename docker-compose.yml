version: '3.6'

services:
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
        - "1080:8025"
    networks:
        - backend     
  php8:
    #build: 
      # context: docker/php81
      # args: 
      #   - LARADOCK_PHP_VERSION=8.1
      #   - INSTALL_XSL=false
      #   - INSTALL_PHPREDIS=true
      #   - INSTALL_AMQP=true
      #   - INSTALL_BCMATH=true
      #   - INSTALL_OPCACHE=true
      #   - INSTALL_MYSQLI=true
      #   - INSTALL_TOKENIZER=true
      #   - INSTALL_INTL=true
      #   - INSTALL_GHOSTSCRIPT=true
      #   - INSTALL_LDAP=true
      #   - INSTALL_IMAGEMAGICK=true
      #   - INSTALL_CALENDAR=true
      #   - INSTALL_APCU=true
    #image: scheffer_shen/php81:latest
    image: scheffer_shen/php74:latest
    container_name: php8
    user: '1000:1000'
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
        - backend

  caddy:
    image: caddy:2
    container_name: caddy
    environment:
      SERVER_NAME: ${SERVER_NAME:-psmf.local, caddy:80}
    ports:
      - 80:80
      - 443:443
    working_dir: /var/www/html
    volumes:
      - ./public:/var/www/html/public
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./docker/.data/caddy/data:/data
      - ./docker/.data/caddy/config:/config
    networks:
        - backend       
        - frontend    

  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=9TT4fgq5
    volumes: 
      - ./docker/.data/db:/var/lib/mysql
      - ./_SQL:/home
    working_dir: /home
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
        - backend

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.0
    container_name: phpmyadmin
    restart: always    
    ports:
        - 8080:80      
    environment:
        PMA_HOST: db
    networks:
        - backend   
        - frontend

  # scrapy:
  #   build: docker/python-scrapy
  #   container_name: scrapy
  #   restart: always    
  #   tty: true
  #   volumes:
  #      - ./:/home
  #   networks:
  #       - backend   

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge      
